import middy from '@middy/core'
import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda'

import { AppDataSource } from 'models'
import { CustomError } from 'shared/utils/custom-error'

export const connectDBMiddleware = (): middy.MiddlewareObj<APIGatewayProxyEvent, APIGatewayProxyResult> => {
  const before: middy.MiddlewareFn<APIGatewayProxyEvent, APIGatewayProxyResult> = async (
    request
  ): Promise<void> => {
    try {
      await AppDataSource.initialize()
      console.log('DB connected')
    } catch (error) {
      console.log('DB connect error')
      console.log(error as any)
      throw new CustomError(error.message, {}, error.code)
    }
  }

  const after: middy.MiddlewareFn<APIGatewayProxyEvent, APIGatewayProxyResult> = async (
    request
  ): Promise<void> => {
    try {
      await AppDataSource.destroy()
      console.log('DB disconnected')
    } catch (error) {
      console.log('DB disconnect error')
      console.log(error as any)
      throw new CustomError(error.message, {}, error.code)
    }
  }

  return {
    before,
    after
  }
}
